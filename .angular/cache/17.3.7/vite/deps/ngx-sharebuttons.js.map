{
  "version": 3,
  "sources": ["../../../../../node_modules/@angular/cdk/fesm2022/clipboard.mjs", "../../../../../node_modules/ngx-sharebuttons/fesm2022/ngx-sharebuttons.mjs"],
  "sourcesContent": ["import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, EventEmitter, Directive, Optional, Input, Output, NgModule } from '@angular/core';\n\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a re-layout. This re-layout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * re-layout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nclass PendingCopy {\n  constructor(text, _document) {\n    this._document = _document;\n    const textarea = this._textarea = this._document.createElement('textarea');\n    const styles = textarea.style;\n    // Hide the element for display and accessibility. Set a fixed position so the page layout\n    // isn't affected. We use `fixed` with `top: 0`, because focus is moved into the textarea\n    // for a split second and if it's off-screen, some browsers will attempt to scroll it into view.\n    styles.position = 'fixed';\n    styles.top = styles.opacity = '0';\n    styles.left = '-999em';\n    textarea.setAttribute('aria-hidden', 'true');\n    textarea.value = text;\n    // Making the textarea `readonly` prevents the screen from jumping on iOS Safari (see #25169).\n    textarea.readOnly = true;\n    // The element needs to be inserted into the fullscreen container, if the page\n    // is in fullscreen mode, otherwise the browser won't execute the copy command.\n    (this._document.fullscreenElement || this._document.body).appendChild(textarea);\n  }\n  /** Finishes copying the text. */\n  copy() {\n    const textarea = this._textarea;\n    let successful = false;\n    try {\n      // Older browsers could throw if copy is not supported.\n      if (textarea) {\n        const currentFocus = this._document.activeElement;\n        textarea.select();\n        textarea.setSelectionRange(0, textarea.value.length);\n        successful = this._document.execCommand('copy');\n        if (currentFocus) {\n          currentFocus.focus();\n        }\n      }\n    } catch {\n      // Discard error.\n      // Initial setting of {@code successful} will represent failure here.\n    }\n    return successful;\n  }\n  /** Cleans up DOM changes used to perform the copy operation. */\n  destroy() {\n    const textarea = this._textarea;\n    if (textarea) {\n      textarea.remove();\n      this._textarea = undefined;\n    }\n  }\n}\n\n/**\n * A service for copying text to the clipboard.\n */\nclass Clipboard {\n  constructor(document) {\n    this._document = document;\n  }\n  /**\n   * Copies the provided text into the user's clipboard.\n   *\n   * @param text The string to copy.\n   * @returns Whether the operation was successful.\n   */\n  copy(text) {\n    const pendingCopy = this.beginCopy(text);\n    const successful = pendingCopy.copy();\n    pendingCopy.destroy();\n    return successful;\n  }\n  /**\n   * Prepares a string to be copied later. This is useful for large strings\n   * which take too long to successfully render and be copied in the same tick.\n   *\n   * The caller must call `destroy` on the returned `PendingCopy`.\n   *\n   * @param text The string to copy.\n   * @returns the pending copy operation.\n   */\n  beginCopy(text) {\n    return new PendingCopy(text, this._document);\n  }\n  static {\n    this.ɵfac = function Clipboard_Factory(t) {\n      return new (t || Clipboard)(i0.ɵɵinject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Clipboard,\n      factory: Clipboard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Clipboard, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n\n/** Injection token that can be used to provide the default options to `CdkCopyToClipboard`. */\nconst CDK_COPY_TO_CLIPBOARD_CONFIG = new InjectionToken('CDK_COPY_TO_CLIPBOARD_CONFIG');\n/**\n * Provides behavior for a button that when clicked copies content into user's\n * clipboard.\n */\nclass CdkCopyToClipboard {\n  constructor(_clipboard, _ngZone, config) {\n    this._clipboard = _clipboard;\n    this._ngZone = _ngZone;\n    /** Content to be copied. */\n    this.text = '';\n    /**\n     * How many times to attempt to copy the text. This may be necessary for longer text, because\n     * the browser needs time to fill an intermediate textarea element and copy the content.\n     */\n    this.attempts = 1;\n    /**\n     * Emits when some text is copied to the clipboard. The\n     * emitted value indicates whether copying was successful.\n     */\n    this.copied = new EventEmitter();\n    /** Copies that are currently being attempted. */\n    this._pending = new Set();\n    if (config && config.attempts != null) {\n      this.attempts = config.attempts;\n    }\n  }\n  /** Copies the current text to the clipboard. */\n  copy(attempts = this.attempts) {\n    if (attempts > 1) {\n      let remainingAttempts = attempts;\n      const pending = this._clipboard.beginCopy(this.text);\n      this._pending.add(pending);\n      const attempt = () => {\n        const successful = pending.copy();\n        if (!successful && --remainingAttempts && !this._destroyed) {\n          // We use 1 for the timeout since it's more predictable when flushing in unit tests.\n          this._currentTimeout = this._ngZone.runOutsideAngular(() => setTimeout(attempt, 1));\n        } else {\n          this._currentTimeout = null;\n          this._pending.delete(pending);\n          pending.destroy();\n          this.copied.emit(successful);\n        }\n      };\n      attempt();\n    } else {\n      this.copied.emit(this._clipboard.copy(this.text));\n    }\n  }\n  ngOnDestroy() {\n    if (this._currentTimeout) {\n      clearTimeout(this._currentTimeout);\n    }\n    this._pending.forEach(copy => copy.destroy());\n    this._pending.clear();\n    this._destroyed = true;\n  }\n  static {\n    this.ɵfac = function CdkCopyToClipboard_Factory(t) {\n      return new (t || CdkCopyToClipboard)(i0.ɵɵdirectiveInject(Clipboard), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(CDK_COPY_TO_CLIPBOARD_CONFIG, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkCopyToClipboard,\n      selectors: [[\"\", \"cdkCopyToClipboard\", \"\"]],\n      hostBindings: function CdkCopyToClipboard_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function CdkCopyToClipboard_click_HostBindingHandler() {\n            return ctx.copy();\n          });\n        }\n      },\n      inputs: {\n        text: [i0.ɵɵInputFlags.None, \"cdkCopyToClipboard\", \"text\"],\n        attempts: [i0.ɵɵInputFlags.None, \"cdkCopyToClipboardAttempts\", \"attempts\"]\n      },\n      outputs: {\n        copied: \"cdkCopyToClipboardCopied\"\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkCopyToClipboard, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkCopyToClipboard]',\n      host: {\n        '(click)': 'copy()'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: Clipboard\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CDK_COPY_TO_CLIPBOARD_CONFIG]\n    }]\n  }], {\n    text: [{\n      type: Input,\n      args: ['cdkCopyToClipboard']\n    }],\n    attempts: [{\n      type: Input,\n      args: ['cdkCopyToClipboardAttempts']\n    }],\n    copied: [{\n      type: Output,\n      args: ['cdkCopyToClipboardCopied']\n    }]\n  });\n})();\nclass ClipboardModule {\n  static {\n    this.ɵfac = function ClipboardModule_Factory(t) {\n      return new (t || ClipboardModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ClipboardModule,\n      imports: [CdkCopyToClipboard],\n      exports: [CdkCopyToClipboard]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ClipboardModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CdkCopyToClipboard],\n      exports: [CdkCopyToClipboard]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_COPY_TO_CLIPBOARD_CONFIG, CdkCopyToClipboard, Clipboard, ClipboardModule, PendingCopy };\n", "import * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injectable, ElementRef, signal, computed, input, output, effect, untracked, Directive } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { Meta } from '@angular/platform-browser';\nimport { Platform } from '@angular/cdk/platform';\nimport { Clipboard } from '@angular/cdk/clipboard';\n\n/** Returns a valid URL or falls back to current URL */\nfunction getValidUrl(url) {\n  const isValidUrl = /^(http|https):\\/\\//.test(url);\n  if (isValidUrl) {\n    return url;\n  }\n  console.warn(`[ShareButtons]: Sharing link '${url}' is invalid!`);\n  return null;\n}\nfunction printPage() {\n  return document.defaultView.print();\n}\nfunction copyToClipboard({\n  params,\n  data,\n  clipboard,\n  uiState\n}) {\n  clipboard.copy(params.url);\n  // Disable copy button\n  uiState.set({\n    icon: data.successIcon,\n    text: data.successText,\n    disabled: true\n  });\n  setTimeout(() => {\n    uiState.set({\n      icon: data.icon,\n      text: data.text,\n      disabled: false\n    });\n  }, data.delay);\n}\nconst SHARE_BUTTONS_CONFIG = new InjectionToken('SHARE_BUTTONS_CONFIG', {\n  providedIn: 'root',\n  factory: () => DEFAULT_OPTIONS\n});\nconst SHARE_ICONS = new InjectionToken('SHARE_ICONS');\nfunction provideShareButtonsOptions(...providers) {\n  return providers;\n}\nfunction withConfig(options) {\n  return {\n    provide: SHARE_BUTTONS_CONFIG,\n    useValue: {\n      ...DEFAULT_OPTIONS,\n      ...options\n    }\n  };\n}\nclass IShareButton {}\nvar SharerMethods;\n(function (SharerMethods) {\n  SharerMethods[\"Anchor\"] = \"anchor\";\n  SharerMethods[\"Window\"] = \"window\";\n})(SharerMethods || (SharerMethods = {}));\nconst DEFAULT_OPTIONS = {\n  sharerMethod: SharerMethods.Anchor,\n  theme: 'default',\n  windowWidth: 800,\n  windowHeight: 500,\n  moreButtonIcon: ['fas', 'ellipsis-h'],\n  lessButtonIcon: ['fas', 'minus'],\n  moreButtonAriaLabel: 'Show more share buttons',\n  lessButtonAriaLabel: 'Show less share buttons'\n};\n// Create message body that includes the sharing link used for Email, SMS and WhatsApp buttons\nconst linkInDescription = {\n  description: p => {\n    return p.description ? `${p.description}\\r\\n${p.url}` : p.url;\n  }\n};\nconst facebookParams = {\n  type: 'facebook',\n  text: 'Facebook',\n  ariaLabel: 'Share on Facebook',\n  icon: ['fab', 'facebook-f'],\n  color: '#4267B2',\n  share: {\n    desktop: 'https://facebook.com/sharer/sharer.php'\n  },\n  params: {\n    url: 'u'\n  }\n};\nconst xParams = {\n  type: 'x',\n  text: 'X',\n  ariaLabel: 'Post on X',\n  icon: ['fab', 'x-twitter'],\n  color: '#000',\n  share: {\n    desktop: 'https://x.com/intent/post'\n  },\n  params: {\n    url: 'url',\n    description: 'text',\n    tags: 'hashtags',\n    via: 'via'\n  }\n};\nconst linkedInParams = {\n  type: 'linkedin',\n  text: 'LinkedIn',\n  ariaLabel: 'Share on LinkedIn',\n  icon: ['fab', 'linkedin-in'],\n  color: '#0a66c2',\n  share: {\n    desktop: 'https://www.linkedin.com/sharing/share-offsite'\n  },\n  params: {\n    url: 'url'\n  }\n};\nconst pinterestParams = {\n  type: 'pinterest',\n  text: 'Pinterest',\n  ariaLabel: 'Share on Pinterest',\n  icon: ['fab', 'pinterest-p'],\n  color: '#e60023',\n  share: {\n    desktop: 'https://pinterest.com/pin/create/button/'\n  },\n  params: {\n    url: 'url',\n    description: 'description',\n    image: 'media'\n  }\n};\nconst redditParams = {\n  type: 'reddit',\n  text: 'Reddit',\n  ariaLabel: 'Share on Reddit',\n  icon: ['fab', 'reddit-alien'],\n  color: '#FF4006',\n  share: {\n    desktop: 'https://www.reddit.com/submit'\n  },\n  params: {\n    url: 'url',\n    title: 'title'\n  }\n};\nconst tumblrParams = {\n  type: 'tumblr',\n  text: 'Tumblr',\n  ariaLabel: 'Share on Tumblr',\n  icon: ['fab', 'tumblr'],\n  color: '#36465D',\n  share: {\n    desktop: 'https://tumblr.com/widgets/share/tool'\n  },\n  params: {\n    url: 'canonicalUrl',\n    description: 'caption',\n    tags: 'tags'\n  }\n};\nconst mixParams = {\n  type: 'mix',\n  text: 'Mix',\n  ariaLabel: 'Share on Mix',\n  icon: ['fab', 'mix'],\n  color: '#eb4924',\n  share: {\n    desktop: 'https://mix.com/add'\n  },\n  params: {\n    url: 'url'\n  }\n};\nconst viberParams = {\n  type: 'viber',\n  text: 'Viber',\n  ariaLabel: 'Share on Viber',\n  icon: ['fab', 'viber'],\n  color: '#665ca7',\n  share: {\n    android: 'viber://forward',\n    ios: 'viber://forward'\n  },\n  params: {\n    description: 'text'\n  },\n  paramsFunc: linkInDescription,\n  requiredParams: {\n    description: true\n  }\n};\nconst vkParams = {\n  type: 'vk',\n  text: 'VKontakte',\n  ariaLabel: 'Share on VKontakte',\n  icon: ['fab', 'vk'],\n  color: '#4C75A3',\n  share: {\n    desktop: 'https://vk.com/share.php'\n  },\n  params: {\n    url: 'url'\n  }\n};\nconst telegramParams = {\n  type: 'telegram',\n  text: 'Telegram',\n  ariaLabel: 'Share on Telegram',\n  icon: ['fab', 'telegram-plane'],\n  color: '#0088cc',\n  share: {\n    desktop: 'https://t.me/share/url'\n  },\n  params: {\n    url: 'url',\n    description: 'text'\n  }\n};\nconst messengerParams = {\n  type: 'messenger',\n  text: 'Messenger',\n  ariaLabel: 'Share on Messenger',\n  icon: ['fab', 'facebook-messenger'],\n  color: '#168AFF',\n  share: {\n    desktop: 'https://www.facebook.com/dialog/send',\n    android: 'fb-messenger://share/',\n    ios: 'fb-messenger://share/'\n  },\n  params: {\n    url: 'link',\n    appId: 'app_id',\n    redirectUrl: 'redirect_uri'\n  }\n};\nconst whatsappParams = {\n  type: 'whatsapp',\n  text: 'WhatsApp',\n  ariaLabel: 'Share on WhatsApp',\n  icon: ['fab', 'whatsapp'],\n  color: '#25D366',\n  share: {\n    desktop: 'https://api.whatsapp.com/send',\n    android: 'whatsapp://send',\n    ios: 'https://api.whatsapp.com/send'\n  },\n  params: {\n    url: 'link',\n    description: 'text'\n  },\n  requiredParams: {\n    description: true\n  },\n  paramsFunc: linkInDescription\n};\nconst xingParams = {\n  type: 'xing',\n  text: 'Xing',\n  ariaLabel: 'Share on Xing',\n  icon: ['fab', 'xing'],\n  color: '#006567',\n  share: {\n    desktop: 'https://www.xing.com/spi/shares/new'\n  },\n  params: {\n    url: 'url'\n  }\n};\nconst lineParams = {\n  type: 'line',\n  text: 'Line',\n  ariaLabel: 'Share on Line',\n  icon: ['fab', 'line'],\n  color: '#00b900',\n  share: {\n    desktop: 'https://social-plugins.line.me/lineit/share'\n  },\n  params: {\n    url: 'url'\n  }\n};\nconst smsParams = {\n  type: 'sms',\n  text: 'SMS',\n  ariaLabel: 'Share link via SMS',\n  icon: ['fas', 'sms'],\n  color: '#20c16c',\n  share: {\n    desktop: 'sms:',\n    ios: 'sms:&'\n  },\n  params: {\n    description: 'body'\n  },\n  paramsFunc: linkInDescription,\n  requiredParams: {\n    description: true\n  }\n};\nconst emailParams = {\n  type: 'email',\n  text: 'Email',\n  ariaLabel: 'Share link via email',\n  icon: ['fas', 'envelope'],\n  color: '#FF961C',\n  share: {\n    desktop: 'mailto:'\n  },\n  params: {\n    title: 'subject',\n    description: 'body'\n  },\n  paramsFunc: linkInDescription,\n  requiredParams: {\n    description: true\n  }\n};\nconst printerParams = {\n  type: 'print',\n  text: 'Print',\n  ariaLabel: 'Print page',\n  icon: ['fas', 'print'],\n  color: '#765AA2',\n  func: printPage\n};\nconst copyParams = {\n  type: 'copy',\n  text: 'Copy link',\n  ariaLabel: 'Copy link',\n  icon: ['fas', 'link'],\n  color: '#607D8B',\n  data: {\n    text: 'Copy link',\n    icon: ['fas', 'link'],\n    successText: 'Copied',\n    successIcon: ['fas', 'check'],\n    delay: 2000\n  },\n  func: copyToClipboard\n};\nconst SHARE_BUTTONS = {\n  facebook: facebookParams,\n  x: xParams,\n  linkedin: linkedInParams,\n  pinterest: pinterestParams,\n  reddit: redditParams,\n  tumblr: tumblrParams,\n  mix: mixParams,\n  viber: viberParams,\n  vk: vkParams,\n  telegram: telegramParams,\n  messenger: messengerParams,\n  whatsapp: whatsappParams,\n  xing: xingParams,\n  line: lineParams,\n  sms: smsParams,\n  email: emailParams,\n  print: printerParams,\n  copy: copyParams\n};\nclass ShareService {\n  constructor() {\n    this.document = inject(DOCUMENT);\n    // This declaration just to allow SHARE_ICONS to load the icons\n    this.icons = inject(SHARE_ICONS, {\n      optional: true\n    });\n    this.meta = inject(Meta);\n    this.platform = inject(Platform);\n    this.clipboard = inject(Clipboard);\n  }\n  /**\n   * Get meta tag content\n   */\n  getMetaTagContent(key) {\n    const metaUsingProperty = this.meta.getTag(`property=\"${key}\"`);\n    const metaUsingName = this.meta.getTag(`name=\"${key}\"`);\n    return (metaUsingProperty || metaUsingName)?.getAttribute('content') ?? null;\n  }\n  getComputedUrl(url) {\n    return getValidUrl(url || this.getMetaTagContent('og:url') || this.document.location.href);\n  }\n  getComputedParams(params) {\n    // If user provided a URL, then we cannot use the meta tag of the current page for the sharing parameters\n    if (params.url) {\n      return {\n        title: params.title,\n        description: params.description,\n        image: params.image,\n        tags: params.tags,\n        via: params.via,\n        url: this.getComputedUrl(params.url),\n        appId: params.appId || this.getMetaTagContent('fb:app_id'),\n        redirectUrl: params.redirectUrl || this.document.location.href\n      };\n    }\n    return {\n      title: params.title || this.getMetaTagContent('og:title'),\n      description: params.description || this.getMetaTagContent('og:description'),\n      image: params.image || this.getMetaTagContent('og:image'),\n      tags: params.tags,\n      via: params.via,\n      url: this.getComputedUrl(params.url),\n      appId: params.appId || this.getMetaTagContent('fb:app_id'),\n      redirectUrl: params.redirectUrl || this.document.location.href\n    };\n  }\n  getComputedUrlParams(shareButton, params) {\n    const computedParams = this.getComputedParams(params);\n    return Object.entries(shareButton.params).reduce((params, [key, realKey]) => {\n      // Check if param has a value\n      if (shareButton.requiredParams && shareButton.requiredParams[key] || computedParams[key]) {\n        // Check if param has a resolver function\n        const resolver = shareButton.paramsFunc?.[key];\n        params[realKey] = resolver ? resolver(computedParams) : computedParams[key];\n      }\n      return params;\n    }, {});\n  }\n  getShareButtonInstance(name, props) {\n    /** Combine injected option with default options */\n    const button = props ? {\n      ...SHARE_BUTTONS[name],\n      ...props\n    } : SHARE_BUTTONS[name];\n    if (button) {\n      return button;\n    }\n    throw new Error(`[ShareButtons]: The share button '${button}' does not exist!`);\n  }\n  share(shareButton, options) {\n    let sharerLink;\n    if (this.platform.IOS && shareButton.share.ios) {\n      sharerLink = shareButton.share.ios;\n    } else if (this.platform.ANDROID && shareButton.share.android) {\n      sharerLink = shareButton.share.android;\n    } else {\n      sharerLink = shareButton.share.desktop;\n    }\n    const params = this.getComputedUrlParams(shareButton, options.params);\n    if (sharerLink) {\n      switch (options.method) {\n        case SharerMethods.Anchor:\n          this.openViaAnchor({\n            params,\n            url: sharerLink,\n            target: options.target\n          }, options.debug);\n          break;\n        case SharerMethods.Window:\n          this.openViaWindow({\n            params,\n            url: sharerLink,\n            target: options.target\n          }, options.windowOptions, options.debug);\n          break;\n      }\n    }\n  }\n  open(options) {\n    const button = this.getShareButtonInstance(options.name, options.props);\n    this.openInstance(options, button);\n  }\n  openInstance(options, button) {\n    if (button.share) {\n      this.share(button, options);\n    } else {\n      button.func({\n        params: this.getComputedParams(options.params),\n        data: button.data,\n        clipboard: this.clipboard,\n        uiState: options.uiState\n      });\n    }\n  }\n  openViaWindow(args, windowOptions, debug) {\n    const finalUrl = `${args.url}?${new HttpParams({\n      fromObject: args.params\n    }).toString()}`;\n    if (debug) {\n      console.log('[SHARE BUTTONS]: open link via window', finalUrl);\n    }\n    const windowRef = windowOptions?.windowObj || this.document.defaultView;\n    // Open link using Window object\n    const openWindow = windowRef?.[windowOptions?.openFunc] || this.document.defaultView.open;\n    openWindow(finalUrl, args.target ?? '_blank', `width=${windowOptions?.width || 800}, height=${windowOptions?.height || 500}`);\n    // Prevent security vulnerability https://medium.com/@jitbit/target-blank-the-most-underestimated-vulnerability-ever-96e328301f4c\n    windowRef.opener ??= null;\n  }\n  openViaAnchor(args, debug) {\n    const finalUrl = `${args.url}?${new HttpParams({\n      fromObject: args.params\n    }).toString()}`;\n    if (debug) {\n      console.log('[SHARE BUTTONS]: open link via anchor', finalUrl);\n    }\n    const linkElement = this.document.createElement('a');\n    // Make it open in a new tab/window (depends on user's browser configuration)\n    linkElement.setAttribute('target', args.target ?? '_blank');\n    // Prevent security vulnerability https://medium.com/@jitbit/target-blank-the-most-underestimated-vulnerability-ever-96e328301f4c\n    linkElement.setAttribute('rel', 'noopener noreferrer');\n    linkElement.href = finalUrl;\n    linkElement.click();\n    linkElement.remove();\n  }\n  static {\n    this.ɵfac = function ShareService_Factory(t) {\n      return new (t || ShareService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ShareService,\n      factory: ShareService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ShareService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nconst SHARE_BUTTONS_PROP = new InjectionToken('SHARE_BUTTONS_PROP', {\n  providedIn: 'root',\n  factory: () => SHARE_BUTTONS\n});\nfunction customShareButton(key, button) {\n  SHARE_BUTTONS[key] = {\n    ...SHARE_BUTTONS[key],\n    ...button\n  };\n  return {\n    provide: SHARE_BUTTONS_PROP,\n    useValue: SHARE_BUTTONS\n  };\n}\nclass ShareButtonDirective {\n  constructor() {\n    this.shareButtonsProps = inject(SHARE_BUTTONS_PROP);\n    /** Injected options */\n    this.options = inject(SHARE_BUTTONS_CONFIG);\n    /** Share directive element ref */\n    this.shareService = inject(ShareService);\n    this.nativeElement = inject(ElementRef).nativeElement;\n    /** Share button UI state */\n    this.uiState = signal({});\n    /** Share button color */\n    this.color = computed(() => this.shareButtonInstance().color);\n    /** Share button text */\n    this.text = computed(() => this.uiState().text);\n    /** Share button icon */\n    this.icon = computed(() => this.uiState().icon);\n    /** Share button disabled */\n    this.disabled = computed(() => this.uiState().disabled);\n    /** Share button type */\n    this.shareButton = input.required();\n    this.shareButtonInstance = computed(() => {\n      /** Combine injected option with default options */\n      const key = this.shareButton();\n      const button = this.shareButtonsProps[key];\n      if (button) {\n        return button;\n      }\n      throw new Error(`[ShareButtons]: The share button '${button}' does not exist!`);\n    });\n    /** Sets the title parameter */\n    this.title = input();\n    /** Sets the description parameter */\n    this.description = input();\n    /** Sets the image parameter for sharing on Pinterest */\n    this.image = input();\n    /** Sets the tags parameter for sharing on X and Tumblr */\n    this.tags = input();\n    /** Sets the fb messenger redirect url to enable sharing on Messenger desktop */\n    this.redirectUrl = input();\n    /** Sharing link */\n    this.url = input();\n    /** Stream that emits when share dialog is opened */\n    this.opened = output();\n    effect(() => {\n      const button = this.shareButtonInstance();\n      untracked(() => {\n        // Set share button properties\n        this.uiState.set({\n          icon: button.icon,\n          text: button.text,\n          disabled: false\n        });\n      });\n    });\n    effect(() => {\n      // Set disabled attribute only when disabled state is true, because disabled=\"false\" will also disable the button\n      this.nativeElement.toggleAttribute('disabled', this.uiState().disabled);\n    });\n  }\n  /**\n   * Share the link\n   */\n  share() {\n    this.shareService.openInstance({\n      params: {\n        url: this.url(),\n        title: this.title(),\n        description: this.description(),\n        image: this.image(),\n        tags: this.tags(),\n        redirectUrl: this.redirectUrl()\n      },\n      target: this.options.sharerTarget,\n      debug: this.options.debug,\n      method: this.options.sharerMethod,\n      uiState: this.uiState\n    }, this.shareButtonInstance());\n    // Emit after share action is done\n    this.opened.emit(this.shareButton());\n  }\n  static {\n    this.ɵfac = function ShareButtonDirective_Factory(t) {\n      return new (t || ShareButtonDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: ShareButtonDirective,\n      selectors: [[\"\", \"shareButton\", \"\"]],\n      hostVars: 3,\n      hostBindings: function ShareButtonDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function ShareButtonDirective_click_HostBindingHandler() {\n            return ctx.share();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-label\", ctx.shareButtonInstance().ariaLabel);\n          i0.ɵɵstyleProp(\"--button-color\", ctx.color());\n        }\n      },\n      inputs: {\n        shareButton: [i0.ɵɵInputFlags.SignalBased, \"shareButton\"],\n        title: [i0.ɵɵInputFlags.SignalBased, \"title\"],\n        description: [i0.ɵɵInputFlags.SignalBased, \"description\"],\n        image: [i0.ɵɵInputFlags.SignalBased, \"image\"],\n        tags: [i0.ɵɵInputFlags.SignalBased, \"tags\"],\n        redirectUrl: [i0.ɵɵInputFlags.SignalBased, \"redirectUrl\"],\n        url: [i0.ɵɵInputFlags.SignalBased, \"url\"]\n      },\n      outputs: {\n        opened: \"opened\"\n      },\n      exportAs: [\"shareButton\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ShareButtonDirective, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[shareButton]',\n      exportAs: 'shareButton',\n      host: {\n        '[style.--button-color]': 'color()',\n        '[attr.aria-label]': 'shareButtonInstance().ariaLabel',\n        '(click)': 'share()'\n      }\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_OPTIONS, IShareButton, SHARE_BUTTONS, SHARE_BUTTONS_CONFIG, SHARE_BUTTONS_PROP, SHARE_ICONS, ShareButtonDirective, ShareService, SharerMethods, copyParams, customShareButton, emailParams, facebookParams, lineParams, linkedInParams, messengerParams, mixParams, pinterestParams, printerParams, provideShareButtonsOptions, redditParams, smsParams, telegramParams, tumblrParams, viberParams, vkParams, whatsappParams, withConfig, xParams, xingParams };\n"],
  "mappings": "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",
  "names": ["document", "SharerMethods", "params"]
}
